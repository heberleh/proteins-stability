aucs_peptides_oversampling = [85.9,85.7,85.5,84.0,83.8,83.8,83.7,83.7,83.6,83.4,83.3,83.2,83.1,83.1,83.0,83.0,83.0,82.9,82.9,82.9,82.8,82.8,82.7,82.7,82.7,82.5,82.5,82.4,82.3,82.3,82.3,82.2,82.2,82.1,82.1,82.0,82.0,82.0,81.9,81.9,81.8,81.8,81.8,81.7,81.7,81.7,81.7,81.7,81.7,81.6,81.6,81.5,81.5,81.5,81.5,81.5,81.5,81.4,81.4,81.4,81.4,81.4,81.3,81.2,81.2,81.1,81.0,81.0,81.0,81.0,81.0,81.0,81.0,81.0,81.0,81.0,80.9,80.9,80.9,80.9,80.9,80.8,80.8,80.8,80.8,80.7,80.7,80.7,80.7,80.7,80.6,80.6,80.6,80.6,80.6,80.6,80.5,80.5,80.5,80.5,80.5,80.5,80.4,80.4,80.4,80.3,80.3,80.3,80.3,80.3,80.3,80.2,80.2,80.2,80.2,80.2,80.2,80.2,80.2,80.2,80.1,80.1,80.1,80.1,80.1,80.0,80.0,80.0,80.0,79.9,79.9,79.8,79.8,79.8,79.8,79.8,79.8,79.8,79.8,79.7,79.7,79.7,79.7,79.7,79.7,79.6,79.6,79.6,79.6,79.6,79.6,79.6,79.6,79.5,79.5,79.5,79.5,79.5,79.5,79.5,79.5,79.4,79.4,79.4,79.4,79.4,79.3,79.3,79.3,79.3,79.3,79.3,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.2,79.1,79.1,79.1,79.1,79.1,79.1,79.0,79.0,79.0,79.0,79.0,79.0,79.0,79.0,79.0,79.0,78.9,78.9,78.9,78.9,78.9,78.8,78.8,78.8,78.8,78.8,78.8,78.8,78.8,78.8,78.8,78.8,78.7,78.7,78.7,78.7,78.7,78.7,78.7,78.7,78.7,78.6,78.6,78.6,78.6,78.6,78.6,78.6,78.6,78.6,78.6,78.6,78.6,78.5,78.5,78.5,78.5,78.5,78.5,78.5,78.5,78.5,78.4,78.4,78.4,78.4,78.4,78.4,78.3,78.3,78.3,78.3,78.3,78.3,78.3,78.3,78.3,78.3,78.2,78.2,78.2,78.2,78.1,78.1,78.1,78.1,78.1,78.1,78.1,78.1,78.1,78.1,78.1,78.0,78.0,78.0,78.0,78.0,78.0,77.9,77.9,77.9,77.9,77.9,77.8,77.8,77.8,77.8,77.8,77.8,77.8,77.8,77.8,77.8,77.7,77.7,77.7,77.7,77.7,77.6,77.6,77.6,77.6,77.6,77.6,77.6,77.6,77.6,77.5,77.5,77.5,77.5,77.5,77.5,77.5,77.5,77.5,77.4,77.4,77.4,77.4,77.4,77.4,77.4,77.4,77.4,77.3,77.3,77.3,77.3,77.3,77.3,77.3,77.3,77.2,77.2,77.2,77.2,77.1,77.1,77.1,77.1,77.1,77.1,77.0,77.0,77.0,77.0,77.0,77.0,76.9,76.9,76.9,76.9,76.9,76.9,76.9,76.9,76.8,76.8,76.8,76.8,76.8,76.8,76.8,76.8,76.8,76.8,76.8,76.8,76.7,76.7,76.7,76.7,76.7,76.7,76.7,76.7,76.7,76.7,76.7,76.7,76.6,76.6,76.6,76.6,76.6,76.6,76.6,76.6,76.6,76.5,76.5,76.5,76.5,76.5,76.5,76.5,76.5,76.5,76.4,76.4,76.4,76.4,76.4,76.4,76.3,76.3,76.3,76.3,76.3,76.3,76.3,76.2,76.2,76.2,76.2,76.2,76.2,76.2,76.2,76.2,76.2,76.1,76.1,76.1,76.1,76.1,76.1,76.1,76.1,76.0,76.0,76.0,76.0,76.0,76.0,76.0,76.0,76.0,76.0,76.0,75.9,75.9,75.9,75.9,75.9,75.9,75.9,75.9,75.9,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.8,75.7,75.7,75.7,75.7,75.7,75.7,75.7,75.7,75.7,75.7,75.7,75.7,75.6,75.6,75.6,75.6,75.6,75.6,75.6,75.6,75.6,75.6,75.6,75.6,75.5,75.5,75.5,75.5,75.5,75.5,75.5,75.5,75.5,75.5,75.5,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.3,75.3,75.3,75.3,75.3,75.3,75.3,75.3,75.3,75.3,75.3,75.3,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.1,75.1,75.1,75.1,75.1,75.1,75.1,75.1,75.1,75.0,75.0,75.0,75.0,75.0,75.0,75.0,75.0,75.0,75.0,75.0,74.9,74.9,74.9,74.9,74.9,74.9,74.9,74.9,74.9,74.9,74.8,74.8,74.8,74.8,74.8,74.8,74.8,74.8,74.8,74.8,74.8,74.8,74.7,74.7,74.7,74.7,74.7,74.7,74.7,74.7,74.7,74.7,74.7,74.6,74.6,74.6,74.6,74.6,74.6,74.6,74.6,74.6,74.6,74.6,74.5,74.5,74.5,74.5,74.5,74.5,74.5,74.5,74.5,74.5,74.5,74.5,74.4,74.4,74.4,74.4,74.4,74.4,74.4,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.3,74.2,74.2,74.2,74.2,74.2,74.2,74.2,74.2,74.2,74.2,74.2,74.1,74.1,74.1,74.1,74.1,74.1,74.1,74.0,74.0,74.0,74.0,74.0,74.0,74.0,74.0,74.0,74.0,74.0,74.0,73.9,73.9,73.9,73.9,73.9,73.9,73.9,73.9,73.9,73.9,73.8,73.8,73.8,73.8,73.8,73.8,73.8,73.8,73.8,73.8,73.8,73.8,73.7,73.7,73.7,73.7,73.7,73.7,73.7,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.5,73.5,73.5,73.5,73.5,73.5,73.5,73.5,73.5,73.4,73.4,73.4,73.4,73.4,73.4,73.4,73.4,73.4,73.4,73.4,73.4,73.3,73.3,73.3,73.3,73.3,73.2,73.2,73.2,73.2,73.2,73.2,73.2,73.1,73.1,73.1,73.1,73.1,73.1,73.1,73.1,73.0,73.0,73.0,73.0,73.0,73.0,72.9,72.9,72.9,72.9,72.9,72.9,72.9,72.9,72.8,72.8,72.7,72.7,72.7,72.7,72.7,72.6,72.6,72.6,72.6,72.6,72.5,72.5,72.5,72.5,72.4,72.4,72.4,72.4,72.4,72.4,72.3,72.3,72.3,72.3,72.3,72.3,72.3,72.3,72.2,72.2,72.2,72.2,72.2,72.1,72.1,72.1,72.1,72.1,72.0,72.0,72.0,72.0,72.0,71.9,71.8,71.8,71.8,71.8,71.8,71.8,71.7,71.7,71.6,71.6,71.6,71.5,71.5,71.4,71.4,71.4,71.4,71.3,71.3,71.3,71.2,71.2,71.2,71.1,71.1,71.0,71.0,71.0,70.9,70.9,70.9,70.9,70.8,70.8,70.8,70.8,70.8,70.8,70.7,70.7,70.7,70.7,70.7,70.6,70.6,70.5,70.5,70.4,70.4,70.4,70.4,70.3,70.3,70.3,70.3,70.3,70.2,70.1,70.1,70.1,70.1,70.1,70.0,70.0,70.0,70.0,70.0,69.9,69.9,69.9,69.9,69.9,69.8,69.8,69.8,69.8,69.8,69.7,69.7,69.7,69.7,69.6,69.5,69.5,69.5,69.5,69.5,69.5,69.4,69.4,69.3,69.3,69.3,69.2,69.2,69.1,69.1,69.1,69.1,69.0,69.0,69.0,69.0,69.0,68.9,68.8,68.8,68.7,68.7,68.6,68.5,68.5,68.5,68.4,68.4,68.3,68.3,68.3,68.3,68.2,68.2,68.2,68.2,68.2,68.2,68.2,68.1,68.1,68.1,68.1,68.0,68.0,67.9,67.9,67.9,67.8,67.8,67.7,67.7,67.6,67.6,67.6,67.5,67.5,67.5,67.4,67.4,67.4,67.4,67.3,67.1,67.1,67.0,67.0,66.9,66.8,66.5,66.4,66.4,66.4,66.4,66.4,66.3,66.3,66.3,66.3,66.2,66.2,66.2,66.1,66.1,66.0,65.9,65.8,65.6,65.5,65.5,65.4,65.4,65.3,65.3,65.2,65.2,65.1,65.1,65.1,65.0,65.0,64.7,64.6,64.2,64.2,64.1,64.1,64.1,64.0,64.0,63.9,63.8,63.3,63.1,63.0,62.8,62.8,62.7,62.6,62.5,62.4,61.9,61.9,61.8,61.8,61.6,61.5,58.1,54.5]

aucs_proteins_oversampling = [74.03,73.47,72.23,71.81,71.47,71.03,70.90,70.73,70.65,70.39,70.37,70.34,70.11,69.78,69.42,69.38,69.28,69.08,69.08,69.04,68.99,68.95,68.83,68.70,68.54,68.35,68.14,67.99,67.92,67.86,67.65,67.64,67.56,67.51,67.38,67.30,67.27,67.24,67.02,66.92,66.92,66.71,66.70,66.62,66.62,66.49,66.41,66.40,65.99,65.87,65.83,65.53,65.07,65.05,64.73,64.01,63.97,62.84,62.27,62.10,60.79,56.72,52.94]

s1 = 85.5
s2 = 85.9
s3 = 81.5
s4 = 74.0
s1_name = "$S_1$"
s2_name = "$S_2$"
s3_name = "$S_3$"
s4_name = "$S_4$"

## numpy is used for creating fake data
import numpy as np 
import matplotlib as mpl 

## agg backend is used to create plot as a .png file
mpl.use('agg')

import matplotlib.pyplot as plt 

data =  [aucs_proteins,aucs_peptides]
# Create a figure instance
#fig = plt.figure(1, figsize=(9, 6))

# Create an axes instance
fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(6, 6), sharey=True)#fig.add_subplot(111)
# meanlineprops = dict(linestyle='--', linewidth=2.5, color='purple')
meanpointprops = dict(marker='D', markeredgecolor='black',
                      markerfacecolor='firebrick', alpha=0.7)
# Create the boxplot
bp = ax.boxplot(data,  meanprops=meanpointprops, meanline=False, showmeans=True)

# plot violin plot

ax.set_title('Predictive power of all possible signatures (SMOTE)')
ax.set_xticklabels(['63 protein signatures','1024 peptide signatures'])

# ax.violinplot(data, positions=[1,2], showmeans=True, 
            # showextrema=True, showmedians=True, bw_method=0.5)
ax.set_ylim([30,95])

x_s = [1,2,2,2] 
y_s = [s4,s1,s2,s3]
labels = [s4_name, s1_name, s2_name, s3_name]
#plt.plot(x_s, y_s, 'ro')

x,y = 1,s4
label_color =  "lavender"
ax.annotate(
        s4_name,
        xy=(x, y), xytext=(-20, 10),
        textcoords='offset points', ha='right', va='bottom',
        bbox=dict(boxstyle='round,pad=0.2', fc=label_color, alpha=0.4),
        arrowprops=dict(arrowstyle = '->', connectionstyle='arc3,rad=0'))

x,y = 2,s1
ax.annotate(
        s1_name,
        xy=(x, y), xytext=(-30, 10),
        textcoords='offset points', ha='right', va='bottom',
        bbox=dict(boxstyle='round,pad=0.2', fc=label_color, alpha=0.4),
        arrowprops=dict(arrowstyle = '->', connectionstyle='arc3,rad=0')) 
        
x,y = 2,s2                       
ax.annotate(
        s2_name,
        xy=(x, y), xytext=(45, 0),
        textcoords='offset points', ha='right', va='bottom',
        bbox=dict(boxstyle='round,pad=0.2', fc=label_color, alpha=0.4),
        arrowprops=dict(arrowstyle = '->', connectionstyle='arc3,rad=0'))

x,y = 2,s3        
ax.annotate(
        s3_name,
        xy=(x, y), xytext=(45, -10),
        textcoords='offset points', ha='right', va='bottom',
        bbox=dict(boxstyle='round,pad=0.2', fc=label_color, alpha=0.5),
        arrowprops=dict(arrowstyle = '->', connectionstyle='arc3,rad=0'))

print bp['means']
print bp['medians']

plt.ylabel("Cross-validation ROC AUC (%)", fontdict=None, labelpad=None)

ax.legend([bp['means'][0], bp['medians'][0]], ['Mean', 'Median'], loc='lower left')

# Save the figure
fig.savefig('boxplot_proteins_vs_peptides_signatures_AUC_OVERSAMPLING.png', bbox_inches='tight')